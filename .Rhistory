data<- read.csv("activity.csv", header = TRUE)
data$date <- as.Date(as.character(data$date), "%Y-%m-%d")
total_steps <- aggregate(steps ~ date, data, sum)
hist(total_steps$steps,
breaks = 10,
xlab = "Total number of steps per day",
ylab = "Count",
main = "Histogram of total steps per day",
col = "darkgreen")
mean(total_steps$steps)
median(total_steps$steps)
average_steps <- aggregate(steps ~ interval, data, mean)
plot(average_steps$interval,
average_steps$steps,
xlab = "Time inteval (5-min step)",
ylab = "Step count",
main= " Average number of steps taken throughout the day",
type = "l",
col="darkgreen")
average_steps$interval[which.max(average_steps$steps)]
sum(is.na(data))
for (i in which(sapply(data$steps, is.na))){
data$steps[i] <- mean(data$steps[data$interval==data$interval[i]], na.rm = TRUE)
}
total_steps_fill <- aggregate(steps ~ date, data, sum)
hist(total_steps_fill$steps,
breaks = 50,
xlab = "Total number of steps per day",
ylab = "Count",
main = "Histogram of total steps per day with replaced missing values",
col = "darkgreen")
mean(total_steps_fill$steps)
median(total_steps_fill$steps)
data$type <-  ifelse(as.POSIXlt(data$date)$wday %in% c(0,6), 'weekend', 'weekday')
average_steps_fill<- aggregate(steps ~ interval + type, data, mean)
library(ggplot2)
ggplot() +
geom_line(data=average_steps_fill, aes(x=interval, y=steps, col=type)) +
facet_grid(type ~ .) +
labs(x="Time inteval (5-min step)", y="Step count") +
theme(legend.position="none")
